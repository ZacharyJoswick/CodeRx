version: '3.7'
services:

  #Main web service
  web:
    build:
      context: ./components/application/
      dockerfile: ./coderx.Dockerfile
    expose:
     - "5000"
    environment: 
      FLASK_DEBUG: 1
      PASSWORD_SALT: ${PASSWORD_SALT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_PORT: ${MAIL_PORT}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - "./components/application/CodeRx:/code/CodeRx"
    networks:
      - default

  #In memory datastore for high speed access
  redis:
    image: "redis:alpine"
    networks:
      - default

  #Postgres database used for all persistent data
  db:
    image: postgres:11.2-alpine
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #Password is for development use only, will use docker secrets going forward
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    networks:
      - default

  #Frontend proxy, handles security and access to backend services
  nginx:
    build:
      context: ./components/
      dockerfile: ./proxy/nginx.Dockerfile
    depends_on:
        - web
        - api
    restart: on-failure
    # image: nginx:alpine
    volumes:
      - ./components/proxy/nginx.conf:/etc/nginx/nginx.conf
    # restart: always
    ports:
     - "80:80"
     - "443:443"
    networks:
      - default

  broker:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672 # port for the daemon API
      - 15672:15672 # port for the RabbitMQ management interface
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  api:
    build:
      context: ./components/RECESS/api
      dockerfile: ./api.Dockerfile
    command: python recess_api.py -p 5672 -s ${RABBIT_HOST_IP}
    restart: on-failure
    expose:
     - "4520"
    ports:
     - "4520:4520"
    depends_on: 
      - broker

  # manager:
  #   build:
  #     context: 

  worker1:
    build:
      context: ./components/RECESS/worker/java
      dockerfile: ./java.Dockerfile
    command: python worker.py -u ${RABBIT_HOST_IP}
    restart: always
    depends_on: 
      - broker

volumes:
  dbdata:
    external: true