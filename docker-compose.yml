version: '3.7'
services:

  #Main web service
  web:
    build:
      context: ./components/application/
      dockerfile: ./coderx.Dockerfile
    expose:
     - "5000"
    environment: 
      FLASK_DEBUG: 1
      PASSWORD_SALT: ${PASSWORD_SALT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_PORT: ${MAIL_PORT}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - "./components/application/CodeRx:/code/CodeRx"
    networks:
      - default

  #In memory datastore for high speed access
  redis:
    image: "redis:alpine"
    networks:
      - default

  #Postgres database used for all persistent data
  db:
    image: postgres:11.2-alpine
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #Password is for development use only, will use docker secrets going forward
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    networks:
      - default

  etcd:
    container_name: etcd
    image: quay.io/coreos/etcd:v3.1.20
    entrypoint: /usr/local/bin/etcd
    command:
        - '--name=etcd'
        - '--initial-advertise-peer-urls=http://etcd:2380'
        - '--listen-peer-urls=http://etcd:2380'
        - '--listen-client-urls=http://etcd:2379,http://localhost:2379'
        - '--advertise-client-urls=http://etcd:2379'
        - '--initial-cluster-token=mys3cr3ttok3n'
        - '--heartbeat-interval=250'
        - '--election-timeout=1250'
    ports:
        - 2379
    volumes:
        - etcd:/etcd_data

  #Frontend proxy, handles security and access to backend services
  nginx:
    build:
      context: ./components/
      dockerfile: ./proxy/nginx.Dockerfile
    depends_on:
        - web
        - api
    restart: on-failure
    # image: nginx:alpine
    volumes:
      - ./components/proxy/nginx.conf:/etc/nginx/nginx.conf
    # restart: always
    ports:
     - "80:80"
     - "443:443"
    networks:
      - default

  broker:
    image: rabbitmq:3-management
    restart: always
    environment: 
      - ETCDCTL_API=3
    ports:
      - 5672:5672 # port for the daemon API
      - 15672:15672 # port for the RabbitMQ management interface

  api:
    build:
      context: ./components/RECESS/api
      dockerfile: ./api.Dockerfile
    command: python recess_api.py -p 5672 -s broker
    restart: on-failure
    expose:
     - "4520"
    ports:
     - "4520:4520"
    depends_on: 
      - broker

  manager:
    build:
      context: ./components/RECESS/manager
      dockerfile: ./manager.Dockerfile
    volumes:
      - "./components/RECESS/manager:/manager"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: on-failure
    # command: python manager.py -l ERROR
    depends_on: 
      - etcd

  # worker:
  #   build:
  #     context: ./components/RECESS/worker/java
  #     dockerfile: ./java.Dockerfile
  #   command: ls
  #   depends_on: 
  #     - broker

volumes:
  dbdata:
    external: true
  etcd: